"use strict";(self.webpackChunksynaptask_docs=self.webpackChunksynaptask_docs||[]).push([[865],{622:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"api/rest/post_node","title":"POST /api/node","description":"Create a new node, optionally under a parent node.","source":"@site/docs/api/rest/post_node.md","sourceDirName":"api/rest","slug":"/api/rest/post_node","permalink":"/api/rest/post_node","draft":false,"unlisted":false,"editUrl":"https://github.com/arsenlblack/synaptask/edit/main/docs/api/rest/post_node.md","tags":[],"version":"current","lastUpdatedBy":"admin","lastUpdatedAt":1758847208000,"frontMatter":{"title":"POST /api/node","slug":"/api/rest/post_node"},"sidebar":"tutorialSidebar","previous":{"title":"GET /api/health","permalink":"/api/rest/get_health"},"next":{"title":"POST /api/link","permalink":"/api/rest/post_link"}}');var i=t(4848),r=t(8453);const d={title:"POST /api/node",slug:"/api/rest/post_node"},a=void 0,o={},l=[{value:"Behavior",id:"behavior",level:2},{value:"REST API",id:"rest-api",level:2},{value:"Example (JavaScript)",id:"example-javascript",level:2},{value:"Example (Python)",id:"example-python",level:2}];function c(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Create a new node, optionally under a parent node."}),"\n",(0,i.jsx)(n.h2,{id:"behavior",children:"Behavior"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.code,{children:"target"})," is provided, the new node is attached as a child of the given parent."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"If no target is provided, node is owned solely by the creator with full access by default."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"ACL:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Caller must have at least ",(0,i.jsx)(n.strong,{children:"editor"})," access to the parent node."]}),"\n",(0,i.jsxs)(n.li,{children:["New node ",(0,i.jsx)(n.strong,{children:"inherits"})," the owner and ACL from the parent node."]}),"\n",(0,i.jsx)(n.li,{children:"View-only is insufficient."}),"\n"]}),"\n",(0,i.jsx)(n.blockquote,{children:"\n"}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsxs)(n.p,{children:["You can create a ",(0,i.jsx)(n.strong,{children:"stand-alone node"})," (without specifying ",(0,i.jsx)(n.code,{children:"target"}),")\nand later attach it to a read-only branch using ",(0,i.jsx)(n.a,{href:"./link_add",children:(0,i.jsx)(n.code,{children:"POST /api/link"})}),"."]}),(0,i.jsx)(n.p,{children:"In this case:"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"source"'})," \u2192 your new node\u2019s ",(0,i.jsx)(n.code,{children:"id"}),","]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"target"'})," \u2192 the read-only node\u2019s ",(0,i.jsx)(n.code,{children:"id"}),","]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"type": 1'})," \u2192 secondary link (keeps your graph consistent without changing branch ACLs)."]}),"\n"]}),(0,i.jsxs)(n.p,{children:["This way, ",(0,i.jsx)(n.strong,{children:"you remain the owner"})," of the new node, while still preserving graph consistency and task dependencies."]})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["A primary link (type=0) is created if the parent is marked as ",(0,i.jsx)(n.code,{children:"dependant=true"}),", otherwise a secondary link (type=1)."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"History batch records node creation, the link (if any) and all side effects like blocking parent (if any)."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"rest-api",children:"REST API"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Endpoint:"})," ",(0,i.jsx)(n.code,{children:"POST /api/node"}),"\n",(0,i.jsx)(n.strong,{children:"Auth:"})," API token\n",(0,i.jsx)(n.strong,{children:"Rate limit:"})," ",(0,i.jsx)(n.code,{children:"30/minute"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Request body:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "target": "<uuid>",   // optional parent node id\n  "title": "string",\n  "description": "string",\n  "status": 0,\n  "dueDate": "2025-09-13T10:00:00Z",\n  "tags": ["backend", "urgent"],\n  "priority": 5,\n  "dependant": true,\n  "volume": 5,\n  "assignee": ["user-id"],\n  "pinned": false,\n  "collapsed": false\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"200 OK"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "ok": true,\n  "diff": {\n    "nodes": [\n      {\n        "id": "uuid",\n        "title": "string",\n        "description": "string",\n        "status": 0,\n        "dueDate": "2025-09-13T10:00:00Z",\n        "tags": ["backend", "urgent"],\n        "priority": 5,\n        "dependant": true,\n        "volume": 5,\n        "assignee": ["user-id"],\n        "pinned": false,\n        "collapsed": false,\n        "createdTime": "2025-09-13T10:00:00Z",\n        "lastEditedTime": "2025-09-13T10:00:00Z",\n        "version": 0,\n        "shareRoots": ["uuid1", "uuid2"]\n      },\n      { // Blocked target (parent node / supertask)\n        "id": "uuid",\n        "status": 2,  // \u2190 Minimal snapshot: only affected props\n        "version": 3,\n      }\n    ],\n    "links": [\n      {\n        "id": "uuid",\n        "source": "nodeId",\n        "target": "nodeId",\n        "type": 0,\n        "wasBlocker": false,\n        "version": 0\n      }\n    ]\n  }\n}\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"The diff includes the newly created node (with all props). Existing nodes that were affected are also included with minimal snapshots (only changed fields).\nExisting nodes that were modified as a side effect (e.g., a parent being blocked) are also included, but only with the updated fields.\nEach diff may include existing nodes with partial updates (only changed fields). Consumers must merge by id+version, not overwrite blindly."})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Code"}),(0,i.jsx)(n.th,{children:"Error"}),(0,i.jsx)(n.th,{children:"Meaning"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"400"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"bad_request"})}),(0,i.jsx)(n.td,{children:"Invalid payload"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"401"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"auth_missing"})}),(0,i.jsx)(n.td,{children:"No token/auth header"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"403"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"forbidden"})}),(0,i.jsx)(n.td,{children:"ACL denied"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"404"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"not_found"})}),(0,i.jsx)(n.td,{children:"Target node doesn\u2019t exist"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"409"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"conflict"})}),(0,i.jsx)(n.td,{children:"Duplicate ID or version conflict"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"429"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"rate_limited"})}),(0,i.jsx)(n.td,{children:"Too many requests"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"500"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"internal.exception"})}),(0,i.jsx)(n.td,{children:"Unexpected server failure"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"example-javascript",children:"Example (JavaScript)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"async function createNode(apiBaseUrl, apiToken, payload, target) {\n  const resp = await fetch(`${apiBaseUrl}/node`, {\n    method: 'POST',\n    headers: {\n      'Authorization': `Bearer ${apiToken}`,\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify({ ...payload, target })\n  });\n\n  if (!resp.ok) {\n    const err = await resp.json().catch(() => ({}));\n    throw new Error(`Node create failed: ${resp.status} ${err.error || ''}`);\n  }\n\n  return resp.json();\n}\n\n// usage\ncreateNode('https://synaptask.space/api', '<YOUR_API_TOKEN>', { title: 'My Task' }, null)\n  .then(data => console.log('Created node diff:', data.diff))\n  .catch(console.error);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"example-python",children:"Example (Python)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import requests\n\nAPI_BASE = "https://synaptask.space/api"\nAPI_TOKEN = "<YOUR_API_TOKEN>"\n\npayload = {\n    "title": "My Task",\n    "description": "A new task",\n    "status": 0,\n}\n\nresp = requests.post(\n    f"{API_BASE}/node",\n    headers={\n        "Authorization": f"Bearer {API_TOKEN}",\n        "Content-Type": "application/json"\n    },\n    json=payload\n)\n\nif resp.status_code != 200:\n    try:\n        err = resp.json()\n    except Exception:\n        err = {}\n    raise RuntimeError(f"Node create failed: {resp.status_code} {err}")\n\ndata = resp.json()\nprint("Created node diff:", data["diff"])\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>a});var s=t(6540);const i={},r=s.createContext(i);function d(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);