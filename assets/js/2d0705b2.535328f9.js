"use strict";(self.webpackChunksynaptask_docs=self.webpackChunksynaptask_docs||[]).push([[291],{72:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"concepts/links","title":"Links","description":"Links connect two nodes in the graph.","source":"@site/docs/concepts/links.md","sourceDirName":"concepts","slug":"/concepts/links","permalink":"/concepts/links","draft":false,"unlisted":false,"editUrl":"https://github.com/arsenlblack/synaptask/edit/main/docs/concepts/links.md","tags":[],"version":"current","lastUpdatedBy":"admin","lastUpdatedAt":1757823755000,"frontMatter":{"title":"Links","slug":"/concepts/links"},"sidebar":"tutorialSidebar","previous":{"title":"Nodes","permalink":"/concepts/nodes"},"next":{"title":"Accesses","permalink":"/concepts/accesses"}}');var i=n(4848),r=n(8453);const c={title:"Links",slug:"/concepts/links"},o=void 0,l={},d=[{value:"Properties",id:"properties",level:2},{value:"Active links",id:"active-links",level:2},{value:"Usage",id:"usage",level:2}];function a(e){const s={a:"a",code:"code",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.p,{children:"Links connect two nodes in the graph."}),"\n",(0,i.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"id"}),": UUID"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"source"}),": NodeID (from, children, subtask)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"target"}),": NodeID (to, parent, supertask)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"type"}),": integer (0=primary, 1=secondary)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"wasBlocker"}),": bool (auto becomes true once on primary links when source blocks target; auto becomes false once type turn into secondary or target status turns into Complited)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"inTrash"}),": bool"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"version"}),": integer (for history guard)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"createdTime"}),": utc timestamp"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"lastEditedTime"}),": utc timestamp"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"active-links",children:"Active links"}),"\n",(0,i.jsx)(s.p,{children:"A link is considered active only if:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Not ",(0,i.jsx)(s.code,{children:"InTrash"})]}),"\n",(0,i.jsx)(s.li,{children:"Both source and target are visible"}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Links define branches."}),"\n",(0,i.jsxs)(s.li,{children:["Branch access (",(0,i.jsx)(s.code,{children:"Accesses.Branch = true"}),") means visibility expands downstream through links."]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["See also: ",(0,i.jsx)(s.a,{href:"/concepts/nodes",children:"Nodes"})," and ",(0,i.jsx)(s.a,{href:"/concepts/accesses",children:"Accesses"}),"."]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>c,x:()=>o});var t=n(6540);const i={},r=t.createContext(i);function c(e){const s=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);