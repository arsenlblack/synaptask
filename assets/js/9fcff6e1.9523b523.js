"use strict";(self.webpackChunksynaptask_docs=self.webpackChunksynaptask_docs||[]).push([[763],{4111:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"api/rest/get_graph","title":"GET /api/graph","description":"Retrieve the portion of the task graph visible to the authenticated user.","source":"@site/docs/api/rest/get_graph.md","sourceDirName":"api/rest","slug":"/api/rest/get_graph","permalink":"/api/rest/get_graph","draft":false,"unlisted":false,"editUrl":"https://github.com/arsenlblack/synaptask/edit/main/docs/api/rest/get_graph.md","tags":[],"version":"current","lastUpdatedBy":"admin","lastUpdatedAt":1758847208000,"frontMatter":{"title":"GET /api/graph","slug":"/api/rest/get_graph"},"sidebar":"tutorialSidebar","previous":{"title":"link:add","permalink":"/api/ws/link_add"},"next":{"title":"GET /api/health","permalink":"/api/rest/get_health"}}');var r=s(4848),i=s(8453);const a={title:"GET /api/graph",slug:"/api/rest/get_graph"},l=void 0,o={},d=[{value:"Visibility Rules",id:"visibility-rules",level:2},{value:"REST API",id:"rest-api",level:2},{value:"Example (JavaScript)",id:"example-javascript",level:2},{value:"Example (Python)",id:"example-python",level:2}];function c(e){const n={br:"br",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Retrieve the portion of the task graph visible to the authenticated user."}),"\n",(0,r.jsx)(n.h2,{id:"visibility-rules",children:"Visibility Rules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Own nodes"})," of the user."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Public nodes"})," accessible via a ",(0,r.jsx)(n.code,{children:"publicToken"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Shared nodes"})," via ",(0,r.jsx)(n.code,{children:"accesses"})," with ",(0,r.jsx)(n.code,{children:"Showing = true"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["If an access grant has ",(0,r.jsx)(n.code,{children:"Branch = true"}),", include the entire subtree of descendants reachable via outbound links."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Access level per node"})," is the ",(0,r.jsx)(n.strong,{children:"maximum privilege granted"}),": ",(0,r.jsx)(n.code,{children:"0=owner"}),", ",(0,r.jsx)(n.code,{children:"1=admin"}),", ",(0,r.jsx)(n.code,{children:"2=editor"}),", ",(0,r.jsx)(n.code,{children:"3=viewer"})," (where 0 is the highest privilege)."]}),"\n",(0,r.jsxs)(n.li,{children:["Links are returned ",(0,r.jsx)(n.strong,{children:"only between visible nodes"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"rest-api",children:"REST API"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Endpoint:"})," ",(0,r.jsx)(n.code,{children:"GET /api/graph"}),(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Auth:"})," Bearer API token (",(0,r.jsx)(n.code,{children:"Authorization: Bearer <token>"}),")\n",(0,r.jsx)(n.strong,{children:"Rate limit:"})," 30 requests per minute"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Query parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"limit"})," ",(0,r.jsx)(n.em,{children:"(int, optional, default=1000, max=5000)"})," \u2014 max number of records (nodes+links)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"offset"})," ",(0,r.jsx)(n.em,{children:"(int, optional, default=0)"})," \u2014 offset for pagination."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"200 OK"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "ok": true,\n  "hasMore": true,\n  "graph": {\n    "nodes": [\n      {\n        "id": "uuid",\n        "title": "string",\n        "description": "string",\n        "status": 0,\n        "dueDate": "2025-09-13T10:00:00Z",\n        "type": 0,\n        "tags": ["backend", "urgent"],\n        "priority": 5,\n        "dependant": true,\n        "volume": 5,\n        "version": 0,\n        "assignee": [],\n        "createdTime": "2025-09-13T10:00:00Z",\n        "lastEditedTime": "2025-09-13T10:00:00Z",\n        "ownerUsername": "BLACK",\n        "ownerEmail": "black@synaptask.space",\n        "publicToken": "string",\n        "x": 0.0,\n        "y": 0.0,\n        "z": 0.0,\n        "pinned": false,\n        "collapsed": false,\n        "access": 0,\n        "shareRoots": ["uuid1", "uuid2"]\n      }\n    ],\n    "links": [\n      {\n        "id": "uuid",\n        "source": "uuid",\n        "target": "uuid",\n        "type": 0,\n        "version": 0,\n        "wasBlocker": false\n      }\n    ]\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Errors:"})," ",(0,r.jsx)(n.code,{children:"401"})," unauthorized, ",(0,r.jsx)(n.code,{children:"429"})," rate limited, ",(0,r.jsx)(n.code,{children:"500"})," internal, ",(0,r.jsx)(n.code,{children:"400"})," bad_request \u2014 invalid limit/offset or malformed query params."]}),"\n",(0,r.jsx)(n.h2,{id:"example-javascript",children:"Example (JavaScript)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"async function fetchGraph(apiBaseUrl, apiToken) {\n  let allNodes = [];\n  let allLinks = [];\n  let offset = 0;\n  const limit = 1000;\n\n  while (true) {\n    const resp = await fetch(`${apiBaseUrl}/graph?limit=${limit}&offset=${offset}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${apiToken}`,\n        'Accept': 'application/json'\n      }\n    });\n\n    if (!resp.ok) {\n      const err = await resp.json().catch(() => ({}));\n      throw new Error(`Graph request failed: ${resp.status} ${err.error || ''}`);\n    }\n\n    const data = await resp.json();\n    const graph = data.graph;\n\n    allNodes.push(...(graph.nodes || []));\n    allLinks.push(...(graph.links || []));\n\n    if (data.hasMore) {\n      offset += limit;\n    } else {\n      break;\n    }\n  }\n\n  console.log('Graph fully loaded');\n  console.log('Total nodes:', allNodes.length);\n  console.log('Total links:', allLinks.length);\n\n  return { nodes: allNodes, links: allLinks };\n}\n\n// usage example\nfetchGraph('https://synaptask.space/api', '<YOUR_API_TOKEN>')\n  .then(({ nodes, links }) => {\n    console.log('Final graph:', nodes.length, 'nodes,', links.length, 'links');\n  })\n  .catch(console.error);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"example-python",children:"Example (Python)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import requests\n\nAPI_BASE = "https://synaptask.space/api"\nAPI_TOKEN = "<YOUR_API_TOKEN>"\n\nall_nodes = []\nall_links = []\noffset = 0\nlimit = 1000\n\nwhile True:\n    resp = requests.get(\n        f"{API_BASE}/graph",\n        headers={"Authorization": f"Bearer {API_TOKEN}"},\n        params={"limit": limit, "offset": offset},\n        timeout=30,\n    )\n\n    if resp.status_code != 200:\n        try:\n            err = resp.json()\n        except Exception:\n            err = {}\n        raise RuntimeError(f"Graph request failed: {resp.status_code} {err}")\n\n    data = resp.json()\n    graph = data.get("graph", {})\n\n    nodes = graph.get("nodes", [])\n    links = graph.get("links", [])\n\n    all_nodes.extend(nodes)\n    all_links.extend(links)\n\n    print(f"Received {len(nodes)} nodes, {len(links)} links (offset={offset})")\n\n    if data.get("hasMore"):\n        offset += limit\n    else:\n        break\n\nprint("Graph fully loaded")\nprint(f"Total nodes: {len(all_nodes)}, Total links: {len(all_links)}")\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var t=s(6540);const r={},i=t.createContext(r);function a(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);